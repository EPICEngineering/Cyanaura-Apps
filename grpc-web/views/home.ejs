<!doctype html>
<html lang="en">

<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.3.1/css/ol.css"
    type="text/css">
  <style>
    .map {
      height: 400px;
      width: 100%;
    }
  </style>
  <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.3.1/build/ol.js" type="text/javascript"></script>
  <link rel="shortcut icon" href="">
  <title>OpenLayers ipfs</title>
</head>

<body>
  <script src="../src/js/index.js"></script>
  <script>
//     function getParameterByName(param, url) {
//     if (!url) url = window.location.href;

//     var results = new RegExp('[\\?&]' + param + '=([^&#]*)').exec(url);
//     if (!results) return undefined;
    
//     return results[1] || undefined;
//  }
//     var ipfs_geoswarm_hash = 'QmWPvCEnSkGR8iTs6uiZSNkbupbv7sz3MV5mKW3erHYVZa'
    window.addEventListener('load', (event) => {
  
      var map = new ol.Map({
        target: 'map',
        layers: [
          new ol.layer.Tile({
            source: new ol.source.OSM()
          })
        ],
        view: new ol.View({
          projection: "EPSG:4326",
          center: [0, 0],
          zoom: 2
        })  
      });
    });

  //   var projection = ol.proj.get('EPSG:4326');
  //   var resolutions = [
  //     1.40625,
  //     0.703125,
  //     0.3515625,
  //     0.17578125,
  //     0.087890625, 
  //     0.0439453125,
  //     0.02197265625,
  //     0.010986328125,
  //     0.0054931640625,
  //     0.00274658203125
  //   ];

  //   map = new ol.Map({
  //     target: 'map',
  //     layers: [
  //       new ol.layer.Tile({
  //         extent: [-180, -90, 180, 90],
  //         source: new ol.source.TileWMS({
  //           url: '/ipfs/QmWPvCEnSkGR8iTs6uiZSNkbupbv7sz3MV5mKW3erHYVZa',
  //           params: { 'LAYERS': 'world' },
  //           tileLoadFunction: function (imageTile, src) {
  //             bbox = getParameterByName('BBOX', src);
  //             extent = bbox.split("%2C");
  //             res = (extent[2] - extent[0]) / 256;
  //             for (z = 0; z < resolutions.length; z++)
  //               if (res == resolutions[z]) break;
  //             x = -270;
  //             y = -180;

  //             x = extent[0] - x;
  //             y = extent[1] - y;

  //             x /= extent[2] - extent[0];
  //             y /= extent[3] - extent[1];

  //             cache = '/ipfs/' + ipfs_geoswarm_hash;
  //             cache += '/world/z' + z + '/' + x + '_' + y + '.png';

  //             console.log(cache);

  //             // node.files.get(cache, function (err, files) {
  //             //   files.forEach((file) => {
  //             //     console.log('GOT => ' + file.path);
  //             //     imageTile.getImage().src = 'data:image/png;base64,' + file.content.toString('base64');
  //             //   })
  //             // });

  //           }
  //         })
  //       })
  //     ],
  //     view: new ol.View({
  //       projection: projection,
  //       center: [0, 0],
  //       zoom: 0
  //     })
  //   });

  // });
    

  </script>

  <h2>Map</h2>
  <p id="ipfs" class="ipfs"></p>
  <div id="map" class="map"></div>
  <button onclick="IPFS_Status()">Stat</button>
</body>

</html>